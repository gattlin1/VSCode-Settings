{
  // Block Security Requirements
  "liveshare.anonymousGuestApproval": "reject",
  "liveshare.guestApprovalRequired": true,
  "liveshare.shareExternalFiles": false,

  // VS Code
  "security.workspace.trust.untrustedFiles": "newWindow",

  // Editor
  "editor.minimap.enabled": false,
  "editor.fontFamily": "Hack Nerd Font, Monaco, Courier New",
  "editor.fontLigatures": true,
  "editor.lineNumbers": "relative",
  "editor.codeLens": true,
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.semanticHighlighting.enabled": false,
  "editor.tabSize": 2,
  "editor.rulers": [80],
  "prettier.jsxSingleQuote": true,
  "prettier.singleQuote": true,
  "files.trimTrailingWhitespace": true,
  "files.eol": "\n",
  "breadcrumbs.enabled": true,
  "emmet.triggerExpansionOnTab": true,
  "files.associations": {
    "*.scss": "postcss",
    "*.rb": "ruby"
  },
  "errorLens.followCursor": "closestProblemMultiline",
  "workbench.sideBar.location": "right",
  "workbench.tree.enableStickyScroll": true,

  // Peacock
  "peacock.affectActivityBar": false,
  "peacock.affectStatusBar": true,
  "peacock.affectTitleBar": false,
  "peacock.affectSashHover": false,
  "peacock.favoriteColors": [
    { "name": "Blue", "value": "#88c0d0" },
    { "name": "Green", "value": "#76b852" },
    { "name": "Sea Green", "value": "#5B9A8B" },
    { "name": "Red", "value": "#fd5c63" },
    { "name": "Brown", "value": "#765827" },
    { "name": "Orange", "value": "#ff9900" },
    { "name": "Cream", "value": "#FFF5E0" }
  ],

  // Todo Highlight
  "todohighlight.isEnable": true,
  "todohighlight.isCaseSensitive": false,
  "todohighlight.keywords": [
    {
      "text": "NOTE:",
      "backgroundColor": "#68B984",
      "color": "black"
    },
    {
      "text": "FIXME:",
      "color": "black"
    },
    {
      "text": "TODO:",
      "backgroundColor": "#88c0d0",
      "color": "black"
    },
    {
      "text": "QUESTION:",
      "backgroundColor": "#FED049",
      "color": "black"
    }
  ],
  "todohighlight.defaultStyle": {
    "color": "black",
    "overviewRulerColor": "black",
    "cursor": "pointer"
  },

  // File watcher
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/.hg/store/**": true
  },
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true
  },

  // File Tree
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "workbench.colorTheme": "Nord Wave",
  "workbench.colorCustomizations": {
    // Default
    "editorCursor.foreground": "#ffffffac",
    "panel.border": "#5f6364",
    "sideBar.border": "#5f6364",
    "[Nord Wave]": {
      "editorLineNumber.activeForeground": "#88c0d0",
      "editorRuler.foreground": "#88c0d0",
      "terminal.tab.activeBorder": "#ffffff00"
    },
    "[Everforest Dark]": {
      "editorLineNumber.activeForeground": "#a7c080",
      "editorRuler.foreground": "#a7c080",
      "terminal.tab.activeBorder": "#9aa79d"
    }
  },

  // Ruby
  "[ruby]": {
    "editor.rulers": [120],
    "editor.defaultFormatter": "Shopify.ruby-lsp",
    "editor.formatOnSave": true
  },
  "rubyLsp.formatter": "rubocop",
  "rubyLsp.rubyVersionManager": {
    "identifier": "rvm"
  },
  "rubyLsp.enableExperimentalFeatures": true,
  "solargraph.completion": true,
  "solargraph.definitions": true,
  "solargraph.diagnostics": true,

  // Java
  // Kotlin
  "kotlin.languageServer.enabled": true,

  // Typescript
  "typescript.updateImportsOnFileMove.enabled": "always",

  // Javascript
  "javascript.format.insertSpaceBeforeFunctionParenthesis": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact"
  },

  // Git
  "diffEditor.ignoreTrimWhitespace": false,
  "gitlens.codeLens.recentChange.enabled": false,
  "gitlens.codeLens.authors.enabled": false,
  "git.path": "/opt/homebrew/bin/git",

  // Vim Settings
  "vim.foldfix": true,
  "vim.useSystemClipboard": true,
  "vim.enableNeovim": true,
  "vim.neovimPath": "/opt/homebrew/bin/nvim",
  "vim.neovimConfigPath": "~/.config/nvim/init.vim",
  "vim.neovimUseConfigFile": true,
  "vim.statusBarColorControl": false,
  "vim.easymotion": true,
  "vim.searchHighlightColor": "#808080",
  "vim.useCtrlKeys": true,
  "vim.overrideCopy": true,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.duration": 500,
  "vim.hlsearch": true,
  "vim.leader": "<space>",
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      "before": ["<C-j>"],
      "after": ["<Esc>"]
    }
  ],
  "vim.normalModeKeyBindings": [
    {
      "before": ["H"],
      "after": ["^"]
    },
    {
      "before": ["L"],
      "after": ["g", "_"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "w"],
      "commands": [":w"]
    },
    {
      "before": [";"],
      "after": [":"]
    },
    {
      "before": ["<C-j>"], // doubles as escaping and removing search highlights
      "commands": [":nohlsearch", "<Esc>"]
    },
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    {
      "before": ["n"],
      "after": ["n", "z", "z"]
    },
    {
      "before": ["N"],
      "after": ["N", "z", "z"]
    },
    {
      "before": ["*"],
      "after": ["*", "z", "z"]
    },
    {
      "before": ["#"],
      "after": ["#", "z", "z"]
    },
    {
      "before": ["g*"],
      "after": ["g*", "z", "z"]
    },
    {
      "before": ["<leader>", "<leader>"],
      "commands": [
        {
          "command": "workbench.action.openPreviousEditorFromHistory"
        },
        {
          "command": "workbench.action.acceptSelectedQuickOpenItem"
        }
      ]
    },
    {
      "before": ["c", "L"],
      "after": ["c", "g", "_"]
    },
    {
      "before": ["c", "H"],
      "after": ["c", "^"]
    },
    {
      "before": ["y", "L"],
      "after": ["y", "g", "_"]
    },
    {
      "before": ["y", "H"],
      "after": ["y", "^"]
    },
    {
      "before": ["<C-u>"],
      "after": ["<C-u>", "z", "z"]
    },
    {
      "before": ["<C-d>"],
      "after": ["<C-d>", "z", "z"]
    },
    {
      "before": ["J"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.moveLinesUpAction"]
    },
    {
      "before": ["<C-b>"], // toggle sidebar
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "b", "a"], // add bookmark
      "commands": ["bookmarks.toggle"]
    },
    {
      "before": ["<leader>", "b", "n"], // jump to next bookmark
      "commands": ["bookmarks.jumpToNext"]
    },
    {
      "before": ["<leader>", "b", "p"], // jump to previous bookmark
      "commands": ["bookmarks.jumpToPrevious"]
    },
    {
      "before": ["u"], // undo change
      "commands": ["undo"]
    },
    {
      "before": ["<C-r>"], // redo change
      "commands": ["redo"]
    },
    {
      "before": ["<C-h>"], // move to left split pane
      "commands": ["workbench.action.focusLeftGroup"]
    },

    {
      "before": ["<C-l>"], // move to right split pane
      "commands": ["workbench.action.focusRightGroup"]
    },
    {
      "before": ["[", "t"], // find previous error
      "commands": ["editor.action.marker.prevInFiles"]
    },
    {
      "before": ["]", "t"], // find next error
      "commands": ["editor.action.marker.nextInFiles"]
    },
    {
      "before": ["<leader>", "p", "s"], // pull up search
      "commands": ["workbench.action.findInFiles"]
    },
    {
      "before": ["<leader>", "p", "c"], // copy path
      "commands": ["workbench.action.files.copyPathOfActiveFile"]
    },
    {
      "before": ["<C-f>"], // quick fix
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["<C-w>", "<C-k>"], // kill tab
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["<C-w>", "<C-v>"], // split tab vertival
      "commands": ["workbench.action.splitEditor"]
    },
    {
      "before": ["<leader>", "t", "r", "l"],
      "commands": [
        {
          "command": "workbench.action.tasks.runTask",
          "args": "Run Ruby Test at Current Line"
        }
      ]
    },
    {
      "before": ["<leader>", "t", "r"],
      "commands": [
        {
          "command": "workbench.action.tasks.runTask",
          "args": "Run Ruby Test"
        }
      ]
    },
    {
      "before": ["<leader>", "t", "j"],
      "commands": [
        {
          "command": "workbench.action.tasks.runTask",
          "args": "Run JS/TS Tests"
        }
      ]
    }

    // Handled in keybindings.json since vim doesn't support <C-.> and <C-,>
    // {
    //   "before": ["<C-.>"],
    //   "commands": ["workbench.action.nextEditor"]
    // },
    // {
    //   "before": ["<C-,>"],
    //   "commands": ["workbench.action.previousEditor"]
    // }
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": ["<C-h>"],
      "commands": [":nohlsearch"]
    },
    {
      "before": ["H"],
      "after": ["^"]
    },
    {
      "before": ["L"],
      "after": ["g", "_"]
    },
    {
      "before": ["J"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.moveLinesUpAction"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<C-j>"],
      "after": ["<Esc>"]
    },
    {
      "before": ["<C-h>"],
      "commands": [":nohlsearch"]
    },
    {
      "before": ["p"],
      "after": ["p", "g", "v", "y"]
    }
  ],
  "vim.commandLineModeKeyBindingsNonRecursive": [
    {
      "before": ["<C-j>"],
      "after": ["<C-c>"]
    }
  ],
  "material-icon-theme.hidesExplorerArrows": true,
  "[python]": {
    "editor.formatOnType": true
  },
  "git.openRepositoryInParentFolders": "always",
  "gitlens.advanced.messages": {
    "suppressIntegrationRequestTimedOutWarning": true
  },
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  "workbench.iconTheme": "material-icon-theme",
  "terminal.integrated.profiles.osx": {
    "zsh": {
      "path": "/bin/zsh",
      "args": ["-l", "-i"]
    }
  }
}
